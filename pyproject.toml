[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "daily-digest"
version = "0.1.0"
description = "A personalized morning briefing system with British-style personality"
readme = "README.md"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Topic :: Communications :: Email",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "boto3>=1.34.0",
    "aws-lambda-powertools>=2.32.0",
    "jinja2>=3.1.2",
    "markupsafe>=2.1.3",
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "python-dotenv>=1.0.0",
    "structlog>=23.2.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-env>=1.1.3",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pylint>=3.0.2",
    "types-requests>=2.31.0.10",
    "types-python-dateutil>=2.8.19.14",
    "sphinx>=7.2.6",
    "sphinx-rtd-theme>=1.3.0",
    "pre-commit>=3.5.0",
    "ipython>=8.18.0",
    "ipdb>=0.13.13",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
env = [
    "ENVIRONMENT=test",
    "LOG_LEVEL=DEBUG",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 